俄罗斯方块游戏技术文档
===================

1. 项目概述
-----------
这是一个基于 Pygame 开发的俄罗斯方块游戏，支持基本的游戏功能和中文界面显示。

2. 技术栈
---------
- Python 3.x
- Pygame 库
- 系统中文字体支持（SimHei 或 Microsoft YaHei）

3. 核心功能
-----------
- 方块移动、旋转和下落
- 分数计算系统
- 游戏暂停功能
- 游戏时间计时器
- 输入法状态智能提示
- 中文界面支持
- 消行特效系统

4. 控制说明
-----------
- 左箭头键：向左移动
- 右箭头键：向右移动
- 下箭头键：加速下落
- R键：旋转方块
- S键：暂停/继续游戏
- 空格键：快速下落

5. 技术要点
-----------
5.1 游戏初始化
- 屏幕尺寸：GRID_WIDTH * BLOCK_SIZE（主游戏区）
- 方块大小：30像素
- 游戏网格：10x20

5.2 方块系统
- 7种基本形状（I、J、L、O、S、T、Z）
- 随机颜色生成
- 碰撞检测系统

5.3 计时系统
- 使用 pygame.time.get_ticks() 实现
- 支持暂停时间计算
- 累计暂停时间处理

5.4 中文支持
- 使用系统字体（SimHei/微软雅黑）
- 智能输入法提示
- 游戏开始自动隐藏提示

5.5 特效系统
- 动态烟花效果
- 多彩字符动画
- 透明度渐变
- 物理运动模拟

6. 关键类和方法
---------------
Tetris 类：
- new_piece(): 生成新方块
- valid_move(): 移动验证
- merge_piece(): 方块固定
- rotate_piece(): 方块旋转
- clear_lines(): 消行处理
- create_firework(): 特效生成
- update_firework(): 特效更新
- draw(): 游戏界面绘制
- run(): 主游戏循环

7. 性能考虑
-----------
- 使用 pygame.time.Clock() 控制帧率
- 优化碰撞检测算法
- 高效的方块旋转实现
- 特效系统性能优化

8. 已知问题
-----------
- 需要完善游戏结束画面
- 可能需要优化旋转系统的边界处理

9. 后续开发建议
---------------
- 添加音效系统
- 实现分数排行榜
- 添加难度级别
- 优化游戏界面布局

10. 维护注意事项
----------------
- 确保系统支持中文字体
- 测试不同分辨率下的显示效果
- 定期检查 Pygame 版本兼容性

11. 依赖安装
------------
pip install pygame

12. 运行方式
------------
python tretris.py 